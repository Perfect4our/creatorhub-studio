#!/usr/bin/env ruby

# Production credential bypass for database operations
if ENV['RAILS_ENV'] == 'production' && (ARGV.include?('db:prepare') || ARGV.include?('db:migrate') || ARGV.include?('db:setup'))
  puts "üîß Production DB operation: bypassing credentials system"
  
  # Set a temporary master key to prevent decryption attempts
  ENV['RAILS_MASTER_KEY'] = 'temporary_bypass_key_for_db_operations_only'
  
  # Ensure we have all required environment variables
  required_vars = ['SECRET_KEY_BASE']
  missing_vars = required_vars.select { |var| ENV[var].nil? || ENV[var].empty? }
  
  if missing_vars.any?
    puts "‚ö†Ô∏è  Missing required environment variables: #{missing_vars.join(', ')}"
    puts "Setting fallback values..."
    ENV['SECRET_KEY_BASE'] ||= 'ef6572c2e7298dd1777b74dc58a19afe93cb8763a57ec22dd0d334912c87bd5c4ea40ce1d9d4da3ee01e062e3a0755691857134e92e6aff22864ecfb98567807'
  end
end

APP_PATH = File.expand_path("../config/application", __dir__)
require_relative "../config/boot"
require "rails/commands"
